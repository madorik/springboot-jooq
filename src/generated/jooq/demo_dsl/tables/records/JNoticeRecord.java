/*
 * This file is generated by jOOQ.
 */
package jooq.demo_dsl.tables.records;


import java.time.LocalDateTime;

import jooq.demo_dsl.tables.JNotice;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JNoticeRecord extends UpdatableRecordImpl<JNoticeRecord> implements Record6<Integer, Integer, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -1823759115;

    /**
     * Setter for <code>sample.notice.idx</code>.
     */
    public JNoticeRecord setIdx(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.idx</code>.
     */
    public Integer getIdx() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sample.notice.author</code>.
     */
    public JNoticeRecord setAuthor(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.author</code>.
     */
    public Integer getAuthor() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sample.notice.title</code>.
     */
    public JNoticeRecord setTitle(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.title</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sample.notice.content</code>.
     */
    public JNoticeRecord setContent(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.content</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sample.notice.create_date</code>.
     */
    public JNoticeRecord setCreateDate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.create_date</code>.
     */
    public LocalDateTime getCreateDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>sample.notice.update_date</code>.
     */
    public JNoticeRecord setUpdateDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>sample.notice.update_date</code>.
     */
    public LocalDateTime getUpdateDate() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return JNotice.NOTICE.IDX;
    }

    @Override
    public Field<Integer> field2() {
        return JNotice.NOTICE.AUTHOR;
    }

    @Override
    public Field<String> field3() {
        return JNotice.NOTICE.TITLE;
    }

    @Override
    public Field<String> field4() {
        return JNotice.NOTICE.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return JNotice.NOTICE.CREATE_DATE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return JNotice.NOTICE.UPDATE_DATE;
    }

    @Override
    public Integer component1() {
        return getIdx();
    }

    @Override
    public Integer component2() {
        return getAuthor();
    }

    @Override
    public String component3() {
        return getTitle();
    }

    @Override
    public String component4() {
        return getContent();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateDate();
    }

    @Override
    public Integer value1() {
        return getIdx();
    }

    @Override
    public Integer value2() {
        return getAuthor();
    }

    @Override
    public String value3() {
        return getTitle();
    }

    @Override
    public String value4() {
        return getContent();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateDate();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateDate();
    }

    @Override
    public JNoticeRecord value1(Integer value) {
        setIdx(value);
        return this;
    }

    @Override
    public JNoticeRecord value2(Integer value) {
        setAuthor(value);
        return this;
    }

    @Override
    public JNoticeRecord value3(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public JNoticeRecord value4(String value) {
        setContent(value);
        return this;
    }

    @Override
    public JNoticeRecord value5(LocalDateTime value) {
        setCreateDate(value);
        return this;
    }

    @Override
    public JNoticeRecord value6(LocalDateTime value) {
        setUpdateDate(value);
        return this;
    }

    @Override
    public JNoticeRecord values(Integer value1, Integer value2, String value3, String value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JNoticeRecord
     */
    public JNoticeRecord() {
        super(JNotice.NOTICE);
    }

    /**
     * Create a detached, initialised JNoticeRecord
     */
    public JNoticeRecord(Integer idx, Integer author, String title, String content, LocalDateTime createDate, LocalDateTime updateDate) {
        super(JNotice.NOTICE);

        set(0, idx);
        set(1, author);
        set(2, title);
        set(3, content);
        set(4, createDate);
        set(5, updateDate);
    }
}
