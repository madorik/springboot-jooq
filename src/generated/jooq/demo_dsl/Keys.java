/*
 * This file is generated by jOOQ.
 */
package jooq.demo_dsl;


import jooq.demo_dsl.tables.JNotice;
import jooq.demo_dsl.tables.records.JNoticeRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>sample</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<JNoticeRecord, Integer> IDENTITY_NOTICE = Identities0.IDENTITY_NOTICE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JNoticeRecord> KEY_NOTICE_PRIMARY = UniqueKeys0.KEY_NOTICE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<JNoticeRecord, Integer> IDENTITY_NOTICE = Internal.createIdentity(JNotice.NOTICE, JNotice.NOTICE.IDX);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<JNoticeRecord> KEY_NOTICE_PRIMARY = Internal.createUniqueKey(JNotice.NOTICE, "KEY_notice_PRIMARY", new TableField[] { JNotice.NOTICE.IDX }, true);
    }
}
